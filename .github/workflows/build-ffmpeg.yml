name: build-ffmpeg
on:
  push:
    paths:
      - effempeg-sys-bindgen/**
      - configure.py
      - .github/workflows/build-ffmpeg.yml
  # TODO: add filter so that it only runs on master when something relevant changes

jobs:
  build-windows:
    name: Build FFMpeg Windows
    runs-on: windows-latest
    permissions:
      contents: write
    strategy:
      matrix:
        configuration: ["standard"]
        arch: ["x86_64"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      # TODO: check if configuration is already there
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: msys2/setup-msys2@v2
        with:
          path-type: 'inherit'
      - name: Installing dependencies
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm make
          which make
      - name: Preparing configuration
        shell: "bash"
        run: |
          python configure.py ${{ matrix.configuration }} ${{ matrix.arch }}
      - name: Configure FFmpeg
        shell: "bash"
        run: |
          export PATH="$(pwd)/vendor:$PATH"
          echo $PATH
          which yasm

          cd FFmpeg
          ls -la
          pwd

          ../run_configure.sh
      - name: Build FFmpeg
        shell: msys2 {0}
        run: |
          export PATH="$(pwd)/vendor:$PATH"
          echo $PATH
          which yasm

          cd FFmpeg
          ls -la
          pwd

          echo "Removing link as it might conflict"
          rm -Rf /usr/bin/link

          echo "Compiling"
          /usr/bin/make -j4

          echo "Installing"
          /usr/bin/make install
      - name: Package shared libs
        run: |
          $configuration = "${{ matrix.configuration }}"
          $zipName = "${configuration}_sharedlibs_${{ matrix.arch }}-pc-windows-msvc.zip"
          echo "Creating zip $zipName"
          Compress-Archive -Path "FFmpeg/SHARED_LIBS" -DestinationPath $zipName

          ls
      - name: Package includes libs
        run: |
          $configuration = "${{ matrix.configuration }}"
          $zipName = "${configuration}_includes_${{ matrix.arch }}-pc-windows-msvc.zip"
          echo "Creating zip $zipName"
          Compress-Archive -Path "FFmpeg/INCLUDES" -DestinationPath $zipName

          ls
      - name: "Publish libs"
        uses: softprops/action-gh-release@v2
        with:
          files: "*.zip"
          tag_name: "build"
          draft: false
          prerelease: false
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build bindgen bindings
        run: |
          cargo run -p effempeg-sys-bindgen
      - name: Prepare bindings
        shell: bash
        run: |
          # Rename the bindings
          mv bindings.rs ${{ matrix.configuration }}_bindings_${{ matrix.arch }}-pc-windows-msvc.rs
      - name: "Publish bindings"
        uses: softprops/action-gh-release@v2
        with:
          files: "*.rs"
          tag_name: "build"
          draft: false
          prerelease: false

  build-macos:
    name: Build FFMpeg MacOS
    runs-on: macos-latest
    permissions:
      contents: write
    strategy:
      matrix:
        configuration: ["standard"]
        arch: ["x86_64", "arm64"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@185247228b4c622139b94e77b9b92e977dc8e074
      - name: Install FFmpeg dependencies
        run: |
          brew install nasm
      - name: Preparing configuration
        run: |
          python configure.py ${{ matrix.configuration }} ${{matrix.arch}}
          chmod +x run_configure.sh
          uname -m
      - name: Configure FFmpeg
        shell: "bash"
        run: |
          cd FFmpeg
          ls -la
          pwd

          ../run_configure.sh
      - name: Build FFmpeg
        run: |
          cd FFmpeg
          ls -la
          pwd

          echo "Compiling"
          /usr/bin/make -j4

          echo "Installing"
          /usr/bin/make install
      - name: Convert Arch to Rust format
        id: rustarchconvert
        run: |
          if [ "${{ matrix.arch }}" == "x86_64" ]; then
            echo "x86_64"
            echo "rustarch=x86_64" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.arch }}" == "arm64" ]; then
            echo "aarch64"
            echo "rustarch=aarch64" >> $GITHUB_OUTPUT
          else
            echo "Unknown arch"
            exit 1
          fi
      - name: Package shared libs
        run: |
          configuration="${{ matrix.configuration }}"
          zipName="${configuration}_sharedlibs_${{ steps.rustarchconvert.outputs.rustarch }}-apple-darwin.zip"
          echo "Creating zip $zipName"
          zip -r $zipName "FFmpeg/SHARED_LIBS"

          ls
      - name: Package includes libs
        run: |
          configuration="${{ matrix.configuration }}"
          zipName="${configuration}_includes_${{ steps.rustarchconvert.outputs.rustarch }}-apple-darwin.zip"
          echo "Creating zip $zipName"
          zip -r $zipName "FFmpeg/INCLUDES"

          ls
      - name: "Publish libs"
        uses: softprops/action-gh-release@v2
        with:
          files: "*.zip"
          tag_name: "build"
          draft: false
          prerelease: false
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build bindgen bindings
        run: |
          cargo run -p effempeg-sys-bindgen
      - name: Prepare bindings
        run: |
          # Rename the bindings
          mv bindings.rs ${{ matrix.configuration }}_bindings_${{ steps.rustarchconvert.outputs.rustarch }}-apple-darwin.rs
      - name: "Publish bindings"
        uses: softprops/action-gh-release@v2
        with:
          files: "*.rs"
          tag_name: "build"
          draft: false
          prerelease: false

      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
